#include <Servo.h>
Servo leftservo;  // Servo Name
Servo rightservo; // Servo Name
const int pingPin = 5; // Trigger Pin of Ultrasonic Sensor
const int echoPin = 6; // Echo Pin of Ultrasonic Sensor
double distance;

void Starter() //This function identities the pins
{
  leftservo.attach(9);  
  rightservo.attach(10);
  //set up the Serial
  Serial.begin(9600);
  //setupt the pin modes  
  pinMode(pingPin, OUTPUT);
  pinMode(echoPin, INPUT);
  leftservo.write(90);
  rightservo.write(90);
}

void Signal() //This function sets up duration. It will be used to remind the other functions of duration.
{
  double duration;  
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2); //send the 10 microsecond trigger
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(pingPin, LOW); //get the pulse duration in microseconds
  duration = pulseIn(echoPin, HIGH); 
  distance = (duration*0.034/2); //converts duration to time
}

void Scan() //This function is only active when a wall is not detected. It will actively scan for a new one by pivoting and slowly moving forward.
{
  while (distance > 150) // VALUE SHOULD BE THE SAME **
  {
    Signal();
    leftservo.write(60);
    rightservo.write(60);
    delay(400);
    // Robot does a mandatory pivot to detect a wall.
    if (distance > 2000)
    {
      leftservo.write(120);
      rightservo.write(120);
      delay(300);
      leftservo.write(120);
      rightservo.write(60);
      delay(600);
      // If a wall was not detected, then this "if" statement reverts its pivot and makes the robot move forward.
    }
  }
}

void Snake() //This function is active when a wall is detected. The robot will move in a nearly straight line in regards to the distance inserted.
{
  while(distance < 150) // VALUE SHOULD BE THE SAME **
  {
    if (distance > 60) // Value should be same*
    { 
      Signal();
      //
      leftservo.write(80);
      rightservo.write(70);
      //scan()
      delay(25);
    }
    else if (distance < 60) // Value should be the same*
    { 
      Signal();
      //
      leftservo.write(130);
      rightservo.write(80);
      delay(25);
    }
  }
}
//It is called Snake() because the robot used to slither instead of moving very straight. Both of the while() statement must share the same value.
//They are what separates between scanning and slithering. The if() in the snake() is the desired distance.

void setup(){
  
  }


void loop() 
{
  Starter();
  Signal();
  //
  if (distance < 150) // VALUE SHOULD BE THE SAME**
  {
    Snake();
  }
  else if (distance > 150) // VALUE SHOULD BE THE SAME** 
  {
    Scan();
  }
  
}  
//The if() statements are joined by the while() statements. It's just much cleaner this way.
