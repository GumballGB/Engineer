#include <Servo.h>
Servo leftservo;  
Servo rightservo;  
const int pingPin = 5; // Trigger Pin of Ultrasonic Sensor
const int echoPin = 6; // Echo Pin of Ultrasonic Sensor
void setup() {
  leftservo.attach(9);  
  rightservo.attach(10);
   //set up the Serial
  Serial.begin(9600);
  //setupt the pin modes  
  pinMode(pingPin, OUTPUT);
  pinMode(echoPin, INPUT);
  leftservo.write(90);
  rightservo.write(90);
}
void loop() {
  long duration;  
  //clear the ping pin
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  //send the 10 microsecond trigger
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(pingPin, LOW);
  //get the pulse duration in microseconds
  duration = pulseIn(echoPin, HIGH);
  int distance = duration*0.034/2;
  //Serial.println(distance);
if (distance > 110) {
  leftservo.write(155);
  rightservo.write(0);
  delay(50);
  Serial.println("Too Far");
}
else if (distance < 110) {
  leftservo.write(180);
  rightservo.write(25);
  delay(25);
  Serial.println("Too Close");
}
else {
  leftservo.write(150);
  rightservo.write(10);
  delay(25);

}
  /*
    TASK: The coins are around 110 cm away from the top wall.
    Use the ultrasonic sensor data to navigate the robot in order
    to collect the coins.
  */
  delay(50);  
}



/////////////////////////CLASS CHALLENGE///////////////////

#include <Servo.h>
Servo leftservo;  // Servo Name
Servo rightservo; // Servo Name
const int pingPin = 5; // Trigger Pin of Ultrasonic Sensor
const int echoPin = 6; // Echo Pin of Ultrasonic Sensor
double distance;

void Turn() //This function is the turning tide
{
  Serial.println("Wall Vanished, Let's Turn");
  leftservo.write(180);
  rightservo.write(90);
  delay(50);
}

void Straight() //This function just makes it go straight
{
  Serial.println("Alligning...");
  leftservo.write(120);
  rightservo.write(60);
  delay(2000);

}


void StaterFuel() //This function identities the pins
{
  leftservo.attach(9);  
  rightservo.attach(10);
  //set up the Serial
  Serial.begin(9600);
  //setupt the pin modes  
  pinMode(pingPin, OUTPUT);
  pinMode(echoPin, INPUT);
  leftservo.write(90);
  rightservo.write(90);
  Serial.println("Engine Ready");
}

void Mileage() //This function sets up duration
{
  double duration;  
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2); //send the 10 microsecond trigger
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(pingPin, LOW); //get the pulse duration in microseconds
  duration = pulseIn(echoPin, HIGH); 
  distance = (duration*0.034/2); //converts duration to time
  //Serial.println(distance); //Used for debugging
}


void setup() {
  StaterFuel();
  Mileage();
  //Serial.println(distance); //Used for debugging
  //This should be under the Mileage fun ^^^

  while(distance < 195) {
    if (distance > 110) 
    { 
      Mileage();
      //
      leftservo.write(140);
      rightservo.write(0);
      delay(50);
      Serial.println("Too Far");
      Serial.println(distance);
      //Serial.println("A"); //Debugging
    }
    else if (distance < 110) 
    { 
      Mileage();
      //
      leftservo.write(180);
      rightservo.write(45);
      delay(50);
      Serial.println(distance); //Debugging
      Serial.println("Too Close");
    }
    else 
    { 
      Mileage();
      //
      leftservo.write(150);
      rightservo.write(30);
      delay(25);
    }
  }
  Turn();
    delay(50);
while(distance < 100) {
  Straight(); //Straightening the bot a bit
  //
  if (distance > 70) 
    { 
      
      Mileage();
      //
      leftservo.write(140);
      rightservo.write(0);
      delay(50);
      Serial.println("Get Closer");
      Serial.println(distance);
      //Serial.println("A"); //Debugging
    }
    else if (distance < 70) 
    { 
      Mileage();
      //
      leftservo.write(180);
      rightservo.write(45);
      delay(50);
      Serial.println(distance); //Debugging
      Serial.println("Get Further");
    }
    else 
    { 
      Mileage();
      //
      leftservo.write(150);
      rightservo.write(10);
      delay(25);

  }
Serial.println("Goodnight");

}

}

void loop() {
  
  }  
